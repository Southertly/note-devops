input {
    generator {
    count => 1000000000000
    codec => json
    message => '[{"threadName":"http-nio-0.0.0.0-8080-exec-10","level":"INFO","logTime":1620349831937,"threadId":20,"logCaller":"com.cmos.core.logger.message.CommonLogManager.writeLog","appLog":"Write message : {\"groupEnv\":\"m\",\"traceId\":\"18EA1DE2-9F88-4705-9E28-BA9BA3C2D919\",\"centerId\":\"00\",\"serviceCode\":\"NGOSC_QRYSKILLBYSEDCLA_POST\",\"hostIp\":\"10.168.75.179\",\"appName\":\"ngpm_rs\",\"requestMsg\":\"CsfRequest [serviceCode=NGOSC_QRYSKILLBYSEDCLA_POST, jsonParams={\\\"beans\\\":[],\\\"params\\\":{\\\"provCode\\\":\\\"00030031\\\",\\\"ccid\\\":\\\"97110086\\\",\\\"secondTaskCode\\\":\\\"100100000001\\\"}}, formDataMultiPart=null, sysParams={X-Csf-Exc-Service-Code=NGOSC_QRYSKILLBYSEDCLA_POST,0.1, X-Timestamp=20210507091031, X-System-Code=ngpm_rs, X-Center-Id=00, X-Csf-Exc-System-Code=ngpm_rs, _log4xContextKey=18EA1DE2-9F88-4705-9E28-BA9BA3C2D919`AOID`/realTimeData/queryRealTimeData``/realTimeData/queryRealTimeData@ngpm_rs`0, X-Group-Env=m, X-expect-language=zh_CN, X-Trans-Id=ngpm_rs20210507091031929972384, _log4xCallType=csf-client}]\",\"targetSystemCode\":\"ngosc\",\"opId\":\"\",\"serviceName\":\"根据二级任务查询技能队列信息接口\",\"retCode\":\"0\",\"version\":\"0.1\",\"retMsg\":\"success\",\"url\":\"http://restapi.ngosc.cs.glb.cmos:20070/ngosc/taskClassifyCsf/querySkillInfoBySecondClassify\",\"systemCode\":\"ngpm_rs\",\"success\":true,\"startTime\":1620349831929,\"endTime\":1620349831936,\"id\":\"AOID\",\"elapsedTime\":7,\"responseMsg\":\"CsfResponse [response={\\\"rtnMsg\\\":\\\"暂无数据\\\",\\\"bean\\\":{\\\"returnCode\\\":\\\"SUC000\\\",\\\"returnMessage\\\":\\\"业务操作成功\\\"},\\\"rtnCode\\\":\\\"0\\\"}, resultCode=0, resultMsg=success, formDataMultiPart=null, responseEx={X-Trans-Id=ngpm_rs20210507091031929972384}, completable=false]\"}","systemCode":"ngpm_rs","orderId":0,"size":0,"hostIp":"10.168.75.179","appName":"ngpm-rs-sv-hua-qas-5c8c8dcfdb-mmpcd"}]'
    }
}
filter {
    if[logTime] {
    ruby {
        code => 'event.set("logdate", Time.at(event.get("logTime")/1000 + 8*60*60).to_s)'
    }
    }
    if[logdate] {
    date {
        match => ["logdate", "yyyy-MM-dd HH:mm:ss Z"]
        target => "@timestamp"
    }
    ruby {
        code => 'event.set("timeDistance", (event.get("@timestamp")-::Time.now).abs - 30*24*3600)'
    }
    }
    mutate {
    remove_field => ["logdate", "@version", "host", "path", "tags", "message"]
    }
    ruby {
    code => 'event.set("load_time", ::Time.now.strftime("%Y-%m-%d %H:%M:%S"))'
    }
}
output {
    stdout {
        codec => dots
    }
}
